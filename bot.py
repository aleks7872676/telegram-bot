import os
import logging
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ADMIN_CHAT_IDS = [int(id) for id in os.getenv("ADMIN_IDS", "").split(",") if id]

if not BOT_TOKEN:
    logger.error("‚ùå TELEGRAM_BOT_TOKEN not set!")
    raise ValueError("Token not provided")

bot = telebot.TeleBot(BOT_TOKEN)
admin_reply_state = {}

@bot.message_handler(commands=["start"])
def start_handler(message):
    bot.send_message(message.chat.id, "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ê–ù BFS.")

@bot.message_handler(func=lambda m: True)
def handle_message(message):
    if message.chat.id in ADMIN_CHAT_IDS and message.chat.id in admin_reply_state:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∞
        user_id = admin_reply_state.pop(message.chat.id)
        bot.send_message(user_id, f"üì¨ –û—Ç–≤–µ—Ç –æ—Ç –ê–ù BFS:\n\n{message.text}")
        bot.send_message(message.chat.id, "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    else:
        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º
        username = message.from_user.username or "–±–µ–∑ username"
        text = message.text or "[–ø—É—Å—Ç–æ]"
        
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_{message.chat.id}"))
        
        for admin_id in ADMIN_CHAT_IDS:
            try:
                bot.send_message(
                    admin_id,
                    f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username} (ID: {message.chat.id}):\n\n{text}",
                    reply_markup=markup
                )
            except Exception as e:
                logger.error(f"Error sending to admin {admin_id}: {e}")
        
        bot.send_message(message.chat.id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")

@bot.callback_query_handler(func=lambda call: call.data.startswith("reply_"))
def handle_reply(call):
    user_id = int(call.data.split("_")[1])
    admin_reply_state[call.message.chat.id] = user_id
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, f"‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

if __name__ == "__main__":
    logger.info("Starting bot...")
    bot.infinity_polling()
